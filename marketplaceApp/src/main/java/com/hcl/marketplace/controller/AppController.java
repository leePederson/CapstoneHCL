package com.hcl.marketplace.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import com.hcl.marketplace.entity.User;
import com.hcl.marketplace.repository.ProductRepository;
import com.hcl.marketplace.repository.UserRepository;
import com.hcl.marketplace.service.impl.UserServiceImpl;




@Controller
public class AppController {
	
	@Autowired
	private UserRepository userRepo;
	
	@Autowired
	private ProductRepository prodRepo;
	
	@Autowired
	private UserController userController;
	
	@Autowired
	private UserServiceImpl userService;
	
	String to = "1@gmail.com";
	String from = " ";
	String subject = "testing";
	String text = "This is a test email.";
	
	
	@RequestMapping(value = "/index")
	public String index() {
		System.out.println("Welcome Page");
		return "index";
	}

	
	@GetMapping("/register")
	public String showRegistrationForm(Model model) {
		model.addAttribute("user", new User());
		return "signup_form";
	}
	
	@GetMapping("/login")
	public String showLoginPage(Model model) {
		userController.listUsers(model);
		return "users";
	}
	

	
	@PostMapping("/process_register")
	public String processRegister(User user) {
		System.out.println("Processing user registration.");
		BCryptPasswordEncoder passwordEncoder = new BCryptPasswordEncoder();
		String encodedPassword = passwordEncoder.encode(user.getPassword());
		user.setPassword(encodedPassword);
		System.out.println(user.getEmail());
		System.out.println(user.getFirstName());
		System.out.println(user.getLastName());
		System.out.println(user.getUsername());
		System.out.println(user.getEmailVerified());
		System.out.println(user.getUserId());
		System.out.println(user.getPassword());
		userService.saveUser(user);
		
		
//		String userEmail = user.getEmail();
//		String from = "from@example.com";
//		final String username = "1a2b3c4d5e6f7g";//username generated by Mailtrap
//	    final String password = "1a2b3c4d5e6f7g";//password generated by Mailtrap
//		String host = "smtp.mailtrap.io";
//		
//		Properties props = new Properties();
//		props.put("mail.smtp.auth",  "true");
//		props.put("mail.smtp.starttls.enable", "true");//itâ€™s optional in Mailtrap
//	    props.put("mail.smtp.host", host);
//	    props.put("mail.smtp.port", "2525");// use one of the options in the SMTP settings tab in your Mailtrap Inbox
//
//	    Session session = Session.getInstance(props, new Authenticator() {
//	    	protected PasswordAuthentication getPasswordAuthentication() {
//	    		return new PasswordAuthentication(username, password);
//	    	}
//	    });
//	    
//	    try {
//	        // Create a default MimeMessage object.
//	        Message message = new MimeMessage(session);
//
//	        // Set From: header field
//	        message.setFrom(new InternetAddress(from));
//
//	        // Set To: header field
//	        message.setRecipients(Message.RecipientType.TO,
//	                   InternetAddress.parse(userEmail));
//
//	        // Set Subject: header field
//	        message.setSubject("Welcome to Lee's Marketplace!");
//
//	        // Put the content of your message
//	        message.setText("FIXME add email authentication.");
//
//	        // Send message
//	        Transport.send(message);
//	        System.out.println("Sent message successfully....");
//	    } catch (MessagingException e) {
//	    	throw new RuntimeException(e);
//	    }
	    
	    return "register_success";
	}

}
